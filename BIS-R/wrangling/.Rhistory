doInstall <- TRUE  # Change to FALSE if you don't want packages installed.
toInstall <- c("XML", "png", "devtools", "RCurl")
if(doInstall){install.packages(toInstall, repos = "http://cran.r-project.org")}
lapply(toInstall, library, character.only = TRUE)
# Some helper functions, lineFinder and makeTable
source_gist("818983")
install.packages(toInstall, repos = "http://cran.r-project.org")
# Some helper functions, lineFinder and makeTable
source_gist("818983")
source_gist("818986")
lapply(toInstall, library, character.only = TRUE)
# Some helper functions, lineFinder and makeTable
source_gist("818983")
source_gist("818986")
election.results
library(readr)
# load the file
election.results <- read_csv('./assets/election_results_2015.csv')
# how big?
dim(election.results)
setwd("C:/Users/lugtigha/data wrangling in R")
election.results <- read_csv('./assets/election_results_2015.csv')
dim(election.results)
library(dplyr)
iris
iris %>% cor(Petal.Length, Petal.Width)
iris %>% Petal.Width
iris %>% mean(Petal.Width)
iris %>% group_by(Species)
iris %>% group_by(Species) %>% mean()
iris %>% group_by(Species) %>% mean
iris %>% group_by(Species) %>% max
mammals
slidify::slidify('Index.Rmd')
setwd("C:/Users/lugtigha/data wrangling in R")
setwd("C:/Users/lugtigha/data wrangling in R")
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
demo(package = tidyr)
demo(package = 'tidyr')
library(tidyr)
install.packages('tidyr')
library(tidyr)
demo(package = 'tidyr')
dadmom
?demo
demo('dadmom')
dadmom
dadmom %>% gather(key, value, named:incm)
dadmom %>%
+   gather(key, value, named:incm) %>%
+   separate(key, c("variable", "type"), -2)
dadmom %>%
+   gather(key, value, named:incm) %>%
+   separate(key, c("variable", "type"), -2)
dadmom %>%   gather(key, value, named:incm) %>% separate(key, c("variable", "type"), -2)
dadmom %>%   gather(key, value, named:incm) %>% separate(key, c("variable", "type"), -3)
dadmom %>%   gather(key, value, named:incm) %>% separate(key, c("variable", "type"), -2)
dadmom
slidify::slidify('Index.Rmd')
?runif
sample(1:100, 5)
sample(1:100, 5)
sample(10:60, 5)
sample(10:60, 5, replace=T)
messy <- data.frame(
15-18 = sample(10:50, 5, replace=T)
)
messy <- data.frame(
'15-18' = sample(10:50, 5, replace=T)
)
messy
rownames(messy) < '15-18'
rownames(messy) <- '15-18'
names(messy) <- '15-18'
messy
messy <- data.frame(
companies = c('BIS', 'DWP', 'DCLG', 'DFE', 'MOJ'),
sample(100:500, 5, replace=T)
)
messy
messy <- data.frame(
companies = c('BIS', 'DWP', 'DCLG', 'DFE', 'MOJ'),
sample(1:999, 5, replace=T)
)
messy
messy <- data.frame(
companies = c('BIS', 'DWP', 'DCLG', 'DFE', 'MOJ'),
sample(1:999, 5, replace=T),
sample(1:999, 5, replace=T),
sample(1:999, 5, replace=T),
sample(1:999, 5, replace=T),
); names(messy) < c('< 22k','22-32k','32-42k','> 42k')
messy <- data.frame(
companies = c('BIS', 'DWP', 'DCLG', 'DFE', 'MOJ'),
sample(1:999, 5, replace=T),
sample(1:999, 5, replace=T),
sample(1:999, 5, replace=T),
sample(1:999, 5, replace=T),
);names(messy) <- c('< 22k','22-32k','32-42k','> 42k')
messy <- data.frame(
c('BIS', 'DWP', 'DCLG', 'DFE', 'MOJ'),
sample(1:999, 5, replace=T),
sample(1:999, 5, replace=T),
sample(1:999, 5, replace=T),
sample(1:999, 5, replace=T),
)
sample(1:999, 5, replace=T)
messy <- data.frame(
A=c('BIS', 'DWP', 'DCLG', 'DFE', 'MOJ'),
B=sample(1:999, 5, replace=T),
C=sample(1:999, 5, replace=T),
D=sample(1:999, 5, replace=T),
E=sample(1:999, 5, replace=T),
)
messy <- data.frame(
A=c('BIS', 'DWP', 'DCLG', 'DFE', 'MOJ'),
B=sample(1:999, 5, replace=T),
C=sample(1:999, 5, replace=T),
D=sample(1:999, 5, replace=T),
E=sample(1:999, 5, replace=T)
);names(messy) <- c('< 22k','22-32k','32-42k','> 42k')
messy
messy <- data.frame(
A=c('BIS', 'DWP', 'DCLG', 'DFE', 'MOJ'),
B=sample(1:999, 5, replace=T),
C=sample(1:999, 5, replace=T),
D=sample(1:999, 5, replace=T),
E=sample(1:999, 5, replace=T)
);names(messy) <- c('Dept.', '< 22k','22-32k','32-42k','> 42k')
messy
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
messy
?gather
gather(messy, income, frequency, -department)
gather(messy, income, frequency, -dept)
gather(messy, income, frequency)
gather(messy, income, frequency, -Dept.)
tidy <- gather(data=messy, key=income, value=frequency, -Dept.)
tidy
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
gather(messy, income, frequency, -Department)
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
messy <- data.frame(
A=c('Birmingham', 'Cambridge', 'Oxford', 'Southampton', 'Bristol'),
B=sample(999:9999, 5, replace=T),
C=sample(500:5000, 5, replace=T),
D=sample(999:9999, 5, replace=T),
E=sample(500:5000,, 5, replace=T)
);names(messy) <- c('University', 'M18-25','M25-35','F18-25','F25-35')
messy <- data.frame(
A=c('Birmingham', 'Cambridge', 'Oxford', 'Southampton', 'Bristol'),
B=sample(999:9999, 5, replace=T),
C=sample(500:5000, 5, replace=T),
D=sample(999:9999, 5, replace=T),
E=sample(500:5000, 5, replace=T)
);names(messy) <- c('University', 'M18-25','M25-35','F18-25','F25-35')
messy
messy <- data.frame(
A=c('Birmingham', 'Cambridge', 'Oxford', 'Southampton', 'Bristol'),
B=sample(4000:9999, 5, replace=T),
C=sample(500:5000, 5, replace=T),
D=sample(4000:9999, 5, replace=T),
E=sample(500:5000, 5, replace=T)
);names(messy) <- c('University', 'M18-25','M25-35','F18-25','F25-35')
messy
messy <- data.frame(
A=c('Birmingham', 'Cambridge', 'Oxford', 'Southampton', 'Bristol'),
B=sample(500:999, 5, replace=T),
C=sample(100:300, 5, replace=T),
D=sample(400:999, 5, replace=T),
E=sample(100:300, 5, replace=T)
);names(messy) <- c('University', 'M18-25','M25-35','F18-25','F25-35')
messy
messy %>% gather(key, value, =University)
messy %>% gather(key, value, -University)
messy %>% gather(key, value, -University) %>% separate(key, c('Sex','Age'), 1)
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
?head
rep(2016, 3)
rep(1:3,2)
n <- 6
messy <- data.frame(
id=1:n,
year=rep(2016, n),
month=rep(1:n/2,n/3),
color=rep(C('Red', 'Blue'), n/2),
d1=sample(500:999, n, replace=T),
d2=sample(500:999, n, replace=T),
d3=sample(500:999, n, replace=T),
d4=sample(500:999, n, replace=T)
)
rep(C('Red', 'Blue'), n/2)
n <- 6
messy <- data.frame(
id=1:n,
year=rep(2016, n),
month=rep(1:n/2,n/3),
color=rep(c('Red', 'Blue'), n/2),
d1=sample(500:999, n, replace=T),
d2=sample(500:999, n, replace=T),
d3=sample(500:999, n, replace=T),
d4=sample(500:999, n, replace=T)
)
messy
n <- 6
messy <- data.frame(
id=1:n,
year=rep(2016, n),
month=rep(1:3,2),
color=rep(c('Red', 'Blue'), 3),
d1=sample(500:999, n, replace=T),
d2=sample(500:999, n, replace=T),
d3=sample(500:999, n, replace=T),
d4=sample(500:999, n, replace=T)
)
messy
?rep
rep(c('red', 'blue'), each=3)
n <- 6
messy <- data.frame(
id=1:n,
year=rep(2016, n),
month=rep(1:3,2),
color=rep(c('Red', 'Blue'), each=3),
d1=sample(500:999, n, replace=T),
d2=sample(500:999, n, replace=T),
d3=sample(500:999, n, replace=T),
d4=sample(500:999, n, replace=T)
)
d
messy
n <- 6
messy <- data.frame(
id=1:n,
year=rep(2016, n),
month=rep(1:3,2),
color=rep(c('Red', 'Blue'), each=3),
d1=sample(500:999, n, replace=T),
d2=sample(500:999, n, replace=T),
d3=sample(500:999, n, replace=T),
d4=sample(500:999, n, replace=T),
d5=sample(500:999, n, replace=T),
d6=sample(500:999, n, replace=T),
d7=sample(500:999, n, replace=T)
)
messy2 <- messy %>% gather(day, value, d1:d7)
messy2
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
demo(spread)
?spread
library(dplyr)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocksm <- stocks %>% gather(stock, price, -time)
stocksm %>% spread(stock, price)
stocksm %>% spread(time, price)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocks %>% gather(stock, price, -time)
messy
messy %>% gather(day, value, d1:d7)
messy %>% gather(day, value, d1:d7) %>% spread(value, color)
messy %>% gather(day, value, d1:d7) %>% spread(color, value)
messy %>% gather(day, value, d1:d7) %>% spread(day, value)
messy %>% gather(day, value, d1:d7) %>% spread(color, value)
messy %>% gather(day, value, d1:d7, na.rm=TRUE) %>% spread(color, value)
messy %>% gather(day, value, d1:d7) %>% spread(color, value)
messy %>% gather(day, value, d1:d7) %>% spread(color, day, value)
messy %>% gather(day, value, d1:d7) %>% spread(color, day)
messy %>% gather(day, value, d1:d7) %>% spread(color, value)
messy %>% gather(day, month, year, value, d1:d7) %>% spread(color, value)
messy %>% gather(day, value, d1:d7) %>% spread(color, value)
messy %>% gather(day, value, d1:d7) %>% spread(-color, value)
messy %>% gather(day, value, d1:d7) %>% spread(color, -value)
messy %>% gather(day, value, d1:d7) %>% spread(color, value)
messy %>% gather(day, value, d1:d7) %>% spread(color, value)
n <- 6
messy <- data.frame(
year=rep(2016, n),
month=rep(1:3,2),
color=rep(c('Red', 'Blue'), each=3),
d1=sample(500:999, n, replace=T),
d2=sample(500:999, n, replace=T),
d3=sample(500:999, n, replace=T),
d4=sample(500:999, n, replace=T),
d5=sample(500:999, n, replace=T),
d6=sample(500:999, n, replace=T),
d7=sample(500:999, n, replace=T)
)
messy %>% gather(day, value, d1:d7) %>% spread(color, value)
messy <- data.frame(
year=rep(2016, n),
month=rep(1:3,2),
minmax=rep(c('Min', 'Max'), each=3),
d1=sample(500:999, n, replace=T),
d2=sample(500:999, n, replace=T),
d3=sample(500:999, n, replace=T),
d4=sample(500:999, n, replace=T),
d5=sample(500:999, n, replace=T),
d6=sample(500:999, n, replace=T),
d7=sample(500:999, n, replace=T)
)
messy %>% gather(day, value, d1:d7) %>% spread(color, value)
messy %>% gather(day, value, d1:d7) %>% spread(minmax, value)
messy %>% gather(day, value, d1:d7) %>% spread(minmax, value) %>% head(10)
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
rnorm(5)
?rnorm
rnorm(5, mean=6, sd=3)
data <- data.frame(
id=1:5,
x=rnorm(5, mean=6, sd=3),
y=rnorm(5, mean=2, sd=2)
)
data %>% gather(variable, value, -id)
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
stocks
stocks %>% gather(key, value, -time)
stocks %>% gather(key, value, -time) %>% spread(value, key)
stocks %>% gather(key, value, -time) %>% spread(key, value)
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
install.packages(nycflights13)
install.packages('nycflights13')
library(nycflights13)
nycflights13::
dim(flights)
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
head(glimpse(flights))
head(glimpse(flights), 10)
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
flights
?select
select(flights, month)
select(flights, contains('arr'))
flights %>% select(month)
flights %>% select(contains('dep'))
flights %>% select(departure = contains('dep'))
sselect(iris, petal = starts_with("Petal"))
select(iris, petal = starts_with("Petal"))
filter
?filter
flights
filter(flights, origin == 'AMS')
filter(flights, dest == 'AMS')
flights %>% filter(dep_delay < 10)
flights %>% filter(dep_delay < 10, arr_delay == 1)
flights %>% filter(dep_delay < 10, arr_delay == 1)$carrier
flights %>% filter(dep_delay < 10, arr_delay == 1)$carrier
?arrange
mutate(flights, total_delay = dep_delay + arr_delay)
with(flights, total_delay = dep_delay + arr_delay)
with(flights, total_delay = dep_delay + arr_delay)
?mutate
summarise(flights, mean(dep_delay))
summarise(flights, mean(dep_delay, rm.na=TRUE))
with(flights, mean(dep_delay))
mean(flights$dep_delay)
mean(flights$dep_delay, na.rm na.rm = T)
mean(flights$dep_delay, na.rm = T)
with(flights, mean(dep_delay, na.rm=T))
flights %>% summarise(mean)
flights %>% summarise(mean(dep_delay))
flights %>% summarise(mean(dep_delay, na.rm=T))
flights
summarise(group_by(flights, carrier), mean(dep_delay, na.rm=T))
flights %>% group_by(carrier) %>% summarise(mean(dep_delay))
flights %>% group_by(carrier) %>% summarise(mean(dep_delay, na.rm = T))
flights %>% group_by(carrier) %>% summarise(mean(dep_delay, na.rm = T))
flights %>% group_by(carrier) %>% summarise(avg_delay = mean(dep_delay, na.rm = T))
flights %>% group_by(carrier) %>% summarise(avg_delay = mean(dep_delay, na.rm = T)) %>% arrange(avg_delay)
lut <- c("AA" = "American", "AS" = "Alaska", "B6" = "JetBlue", "CO" = "Continental", "DL" = "Delta", "OO" = "SkyWest", "UA" = "United", "US" = "US_Airways", "WN" = "Southwest", "EV" = "Atlantic_Southeast", "F9" = "Frontier", "FL" = "AirTran", "MQ" = "American_Eagle", "XE" = "ExpressJet", "YV" = "Mesa")
flights$CarrierName <- lut[flights$carrier]
fligths
flights
flights$CarrierName
flights %>% group_by(carrier) %>% summarise(avg_delay = mean(dep_delay, na.rm = T)) %>% arrange(avg_delay)
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
mutate(flights, total_delay2 = dep_delay + arr_delay)
flights
flights %>% mutate(total_delay = dep_delay + arr_delay)
flights
flights$total_delay <- flights$dep_delay + flights$arr_delay
flights
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
flights
flights %>% filter(carrier %in% c('UA', 'DL', 'AA'))
flights %>% mutate(date = paste(year, month, day, sep='-'))
slidify::slidify('Index.Rmd')
election.results
election.results %>% filter(Country='England')
election.results %>% filter(Country=='England')
election.results %>% filter(Country=='England') %>% select(`Constituency Name`:`Total number of valid votes counted`, Pirate)
election.results %>% filter(Country=='England') %>% select(`Constituency Name`:`Total number of valid votes counted`, Pirate) %>% mutate(turnout = `Total number of valid votes counted`/Electorate)
election.results %>% filter(Country=='England') %>% select(`Constituency Name`:`Total number of valid votes counted`, Pirate) %>% summarise(sum(electorate))
election.results %>% filter(Country=='England') %>% select(`Constituency Name`:`Total number of valid votes counted`, Pirate) %>% summarise(sum(Electorate))
election.results %>% filter(Country=='England') %>% select(`Constituency Name`:`Total number of valid votes counted`, Pirate) %>% sum(Electorate)/sum(`Total number of valid votes counted`))
election.results %>% filter(Country=='England') %>% select(`Constituency Name`:`Total number of valid votes counted`, Pirate) %>% sum(Electorate)/sum(`Total number of valid votes counted`)
election.results %>% filter(Country=='England') %>% select(`Constituency Name`:`Total number of valid votes counted`, Pirate) %>% summarise(total=sum(Electorate)/sum(`Total number of valid votes counted`))
election.results %>% filter(Country=='England') %>% select(`Constituency Name`:`Total number of valid votes counted`, Pirate) %>% summarise(total=sum(`Total number of valid votes counted`)/sum(Electorate))
election.results %>% filter(Country=='England')%>% summarise(total=sum(`Total number of valid votes counted`)/sum(Electorate))
election.results
election.results %>%
filter(Country=='England')%>%
rename(`Total number of valid votes counted` = nvotes)
summarise(total=sum(nvotes)/sum(Electorate))
election.results %>%
filter(Country=='England')%>%
rename(`Total number of valid votes counted` = nvotes)
summarise(total=sum(nvotes)/sum(Electorate))
election.results %>%
filter(Country=='England')%>%
rename(nvotes = `Total number of valid votes counted`)
summarise(total=sum(nvotes)/sum(Electorate))
election.results %>%
filter(Country=='England')%>%
rename(nvotes = `Total number of valid votes counted`) %>%
summarise(total=sum(nvotes)/sum(Electorate))
election.results %>%
rename(nvotes = `Total number of valid votes counted`) %>%
summarise(total=sum(Pirate)/sum(Electorate))
election.results %>%
rename(nvotes = `Total number of valid votes counted`) %>%
summarise(total=sum(Pirate, rm.na=T)/sum(Electorate, rm.na=T))
sum(election.results$Pirate)
sum(election.results$Pirate, na.rm = T)
election.results %>%
filter(Country=='England')%>%
summarise(total=sum(Pirate, na.rm = T))
election.results %>%
summarise(total=sum(Pirate, na.rm = T))
election.results %>%
summarise(total=sum(Pirate, na.rm = T)) %>%
arrange(total)
election.results %>%
arrange(Pirate) %>%
head(3)
election.results %>%
arrange(Pirate) %>%
select(`Constituency Name`, Region, Pirate) %>%
head(3)
election.results %>%
arrange(desc(Pirate) %>%
select(`Constituency Name`, Region, Pirate) %>%
head(3)
)
election.results %>%
arrange(desc(Pirate)) %>%
select(`Constituency Name`, Region, Pirate) %>%
head(3)
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
slidify::slidify('Index.Rmd')
